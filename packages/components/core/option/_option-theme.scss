@use 'sass:meta';
@use 'sass:map';

@use '../styles/typography/typography-utils' as *;
@use '../styles/common/tokens' as *;

@mixin kbq-option($component, $style-name) {
    $state: map.get($component, $style-name);

    background: kbq-css-variable(list-#{$style-name}-container-background, map.get($state, container-background));

    .kbq-option-text {
        color: kbq-css-variable(list-#{$style-name}-text-color, map.get($state, text));
    }

    .kbq-option-action .kbq-icon {
        color: kbq-css-variable(list-#{$style-name}-icon-button-color, map.get($state, icon-button));
    }

    .kbq-option-caption {
        color: kbq-css-variable(list-#{$style-name}-caption-color, map.get($state, caption));
    }
}

@mixin kbq-option-theme($theme) {
    $list-item: map.get(map.get($theme, components), list-item);

    .kbq-option {
        @include kbq-option($list-item, default);

        &:hover:not(.kbq-disabled) {
            @include kbq-option($list-item, states-hover);
        }

        &.kbq-focused,
        &.kbq-active {
            border-color: kbq-css-variable(
                list-states-focused-focus-outline-color,
                map.get($list-item, states-focused, focus-outline)
            );
        }

        &.kbq-selected {
            @include kbq-option($list-item, states-selected);

            &:hover:not(.kbq-disabled) {
                @include kbq-option($list-item, states-selected-hover);
            }
        }

        &.kbq-disabled {
            @include kbq-option($list-item, states-disabled);
        }
    }
}

@mixin kbq-option-typography($config) {
    .kbq-option {
        @include kbq-typography-css-variables(list, text);
    }

    .kbq-list-option-caption {
        @include kbq-typography-css-variables(list, caption);
    }
}
