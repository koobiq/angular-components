@use 'sass:map';


@use '../../styles/common/tokens' as *;


@mixin kbq-pseudo-checkbox-color($component, $style-name) {
    $style: map.get($component, $style-name);
    $base: checkbox-#{$style-name};

    border-color: kbq-css-variable(#{$base}-default-border, map.get($style, default, border));

    & .kbq-checkbox-checkmark,
    & .kbq-checkbox-mixedmark {
        color: kbq-css-variable(#{$base}-default-color, map.get($style, default, color));
    }

    &.kbq-checked,
    &.kbq-indeterminate {
        border-color: kbq-css-variable(#{$base}-checked-border, map.get($style, checked, border));
        background: kbq-css-variable(#{$base}-checked-background, map.get($style, checked, background));
    }

    &.kbq-disabled {
        & .kbq-checkbox-checkmark,
        & .kbq-checkbox-mixedmark {
            color: kbq-css-variable(#{$base}-disabled-color, map.get($style, disabled, color));
        }

        border-color: kbq-css-variable(#{$base}-disabled-border, map.get($style, disabled, border));
        background: kbq-css-variable(#{$base}-disabled-background, map.get($style, disabled, background));
    }
}

@mixin kbq-pseudo-checkbox-theme($theme) {
    $checkbox: map.get($theme, components, checkbox);

    .kbq-pseudo-checkbox {
        @include kbq-pseudo-checkbox-color($checkbox, theme);

        &.kbq-error {
            @include kbq-pseudo-checkbox-color($checkbox, error);
        }
    }
}
