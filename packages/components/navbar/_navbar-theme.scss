@use 'sass:meta';
@use 'sass:map';

@use '../core/styles/typography/typography-utils' as *;
@use '../core/styles/common/tokens' as *;

@mixin kbq-navbar-item($component, $state-name) {
    $state: map.get($component, $state-name);

    &:not(.kbq-navbar-item_has-nested) {
        &:after {
            display: block;
            background: kbq-css-variable(navbar-item-#{$state-name}-content-background, map.get($state, background));
        }
    }

    .kbq-navbar-title {
        color: kbq-css-variable(navbar-item-#{$state-name}-content-text, map.get($state, text));
    }

    & > .kbq-icon {
        color: kbq-css-variable(navbar-item-#{$state-name}-content-icon-left, map.get($state, icon-left)) !important;
    }

    .kbq-navbar-item__arrow-icon {
        color: kbq-css-variable(navbar-item-#{$state-name}-content-icon-right, map.get($state, icon-right)) !important;
    }
}

@mixin kbq-navbar-theme($theme) {
    $navbar: map.get($theme, components, navbar);
    $item: map.get($navbar, item);

    .kbq-navbar,
    .kbq-vertical-navbar .kbq-vertical-navbar__container {
        background-color: kbq-css-variable(navbar-background, map.get($navbar, background));
    }

    .kbq-vertical-navbar .kbq-vertical-navbar__container {
        border-right: 1px solid kbq-css-variable(navbar-border, map.get($navbar, border));
    }

    .kbq-navbar-item,
    .kbq-navbar-brand,
    .kbq-navbar-toggle {
        cursor: pointer;

        @include kbq-navbar-item($item, default);

        &:hover:not(.kbq-disabled, .kbq-vertical.kbq-navbar-brand) {
            @include kbq-navbar-item($item, states-hover);
        }

        &.cdk-focused.cdk-keyboard-focused {
            outline: none;

            &:after {
                display: block;
                box-shadow: inset 0 0 0 2px
                    kbq-css-variable(states-line-focus-theme, map.get($theme, states, line, focus-theme));
            }
        }

        &:active:not(.kbq-disabled, .kbq-vertical.kbq-navbar-brand),
        &.kbq-active:not(.kbq-disabled, .kbq-vertical.kbq-navbar-brand) {
            @include kbq-navbar-item($item, states-selected);
        }

        &.kbq-navbar-focusable-item {
            outline: none;
        }

        &.kbq-disabled {
            @include kbq-navbar-item($item, states-disabled);

            pointer-events: none;
            cursor: default;
        }
    }

    .kbq-navbar-brand.kbq-vertical:hover {
        .kbq-navbar-logo {
            transform: scale(1.06);
        }
    }

    .kbq-navbar-brand.kbq-horizontal:hover {
        .kbq-navbar-logo {
            z-index: 1;
        }
    }

    .kbq-navbar-divider {
        background: kbq-css-variable(line-contrast-less, map.get($theme, line, contrast-less));
    }
}

button {
    &.kbq-navbar-item,
    &.kbq-navbar-brand,
    &.kbq-navbar-toggle {
        background: transparent;
        border: none;
    }
}

@mixin kbq-navbar-typography($config) {
    .kbq-navbar-title {
        @include kbq-typography-level-to-styles_css-variables(typography, text-normal-medium);
    }

    .kbq-navbar-brand {
        .kbq-navbar-title {
            @include kbq-typography-css-variables(navbar, title);
        }
    }
}
