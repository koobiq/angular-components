@use 'sass:meta';
@use 'sass:map';

@use '../core/styles/typography/typography-utils' as *;
@use '../core/styles/common/tokens' as *;


@mixin kbq-navbar-item($state) {
    &:not(.kbq-navbar-item_has-nested) {
        &:after {
            display: block;
            background: map.get($state, background);
        }
    }

    .kbq-navbar-title {
        color: map.get($state, text);
    }

    & > .kbq-icon {
        color: map.get($state, icon-left) !important;
    }

    .kbq-navbar-item__arrow-icon {
        color: map.get($state, icon-right) !important;
    }
}


@mixin kbq-navbar-theme($theme) {
    $line: map.get($theme, line);
    $states-line: map.get(map.get($theme, states), line);

    $navbar: map.get(map.get($theme, components), navbar);
    $item: map.get($navbar, item);


    .kbq-navbar,
    .kbq-vertical-navbar .kbq-vertical-navbar__container {
        background-color: map.get($navbar, background);
    }

    .kbq-vertical-navbar .kbq-vertical-navbar__container {
        border-right: 1px solid map.get($navbar, border);
    }

    .kbq-navbar-item,
    .kbq-navbar-brand,
    .kbq-navbar-toggle {
        cursor: pointer;

        @include kbq-navbar-item(map.get($item, default));

        &:hover:not(.kbq-disabled, .kbq-vertical.kbq-navbar-brand) {
            @include kbq-navbar-item(map.get($item, hover));
        }

        &.cdk-focused.cdk-keyboard-focused {
            outline: none;

            &:after {
                display: block;
                box-shadow: inset 0 0 0 2px map.get($states-line, focus-theme)
            };
        }

        &:active:not(.kbq-disabled, .kbq-vertical.kbq-navbar-brand),
        &.kbq-active:not(.kbq-disabled, .kbq-vertical.kbq-navbar-brand) {
            @include kbq-navbar-item(map.get($item, selected));
        }

        &.kbq-navbar-focusable-item {
            outline: none;
        }

        &.kbq-disabled {
            @include kbq-navbar-item(map.get($item, disabled));

            pointer-events: none;
            cursor: default;
        }
    }

    .kbq-navbar-brand.kbq-vertical:hover {
        .kbq-navbar-logo {
            transform: scale(1.06);
        }
    }

    .kbq-navbar-brand.kbq-horizontal:hover {
        .kbq-navbar-logo {
            z-index: 1;
        }
    }

    .kbq-navbar-divider {
        background: map.get($line, contrast-fade);
    }
}

button {
    &.kbq-navbar-item,
    &.kbq-navbar-brand,
    &.kbq-navbar-toggle {
        background: transparent;
        border: none;
    }
}

@mixin kbq-navbar-typography($config) {
    .kbq-navbar-title {
        @include kbq-typography-level-to-styles($config, text-normal-strong);
    }

    .kbq-navbar-brand {
        .kbq-navbar-title {
            @include kbq-typography-css-variables(navbar, title);
        }
    }
}
