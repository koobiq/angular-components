@use 'sass:meta';
@use 'sass:map';

@use '../core/styles/theming/theming' as *;
@use '../core/styles/typography/typography-utils' as *;
@use '../core/styles/common/tokens' as *;

@mixin kbq-hint-color($component, $type, $style-name) {
    $style: map.get($component, $type, $style-name);

    color: kbq-css-variable(hint-#{$type}-#{$style-name}-text, map.get($style, text));

    & .kbq-icon {
        color: kbq-css-variable(hint-#{$type}-#{$style-name}-icon, map.get($style, icon)) !important;
    }
}

@mixin kbq-hint-theme($theme) {
    $hint: map.get(map.get($theme, components), hint);

    .kbq-hint {
        &.kbq-contrast-fade {
            @include kbq-hint-color($hint, fill-text-on, fade-contrast);
        }

        &.kbq-success {
            @include kbq-hint-color($hint, fill-text-on, success);
        }

        &.kbq-warning {
            @include kbq-hint-color($hint, fill-text-on, warning);
        }

        &.kbq-error {
            @include kbq-hint-color($hint, fill-text-on, error);
        }
    }

    .kbq-hint.kbq-hint_fill-text-off {
        &.kbq-contrast-fade {
            @include kbq-hint-color($hint, fill-text-off, fade-contrast);
        }

        &.kbq-success {
            @include kbq-hint-color($hint, fill-text-off, success);
        }

        &.kbq-warning {
            @include kbq-hint-color($hint, fill-text-off, warning);
        }

        &.kbq-error {
            @include kbq-hint-color($hint, fill-text-off, error);
        }
    }
}

@mixin kbq-hint-typography($config) {
    .kbq-hint .kbq-hint__text {
        @include kbq-typography-css-variables(hint, normal-text);
    }

    .kbq-hint.kbq-hint_compact .kbq-hint__text {
        @include kbq-typography-css-variables(hint, compact-text);
    }
}
