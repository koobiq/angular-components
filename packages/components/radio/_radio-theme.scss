@use 'sass:meta';
@use 'sass:map';

@use '../core/styles/typography/typography-utils' as *;
@use '../core/styles/common/tokens' as *;

@mixin kbq-radio-state($component, $type, $state-name) {
    $state: map.get($component, $type, $state-name);

    & .kbq-radio-button__outer-circle {
        border-color: kbq-css-variable(
            radio-#{$type}-#{$state-name}-outer-circle-border,
            map.get($state, outer-circle-border)
        );
        background: kbq-css-variable(
            radio-#{$type}-#{$state-name}-outer-circle-background,
            map.get($state, outer-circle-background)
        );
        box-shadow: kbq-css-variable(
            radio-#{$type}-#{$state-name}-outer-circle-shadow,
            map.get($state, outer-circle-shadow)
        );
    }

    & .kbq-radio-button__inner-circle {
        background: kbq-css-variable(
            radio-#{$type}-#{$state-name}-inner-circle-background,
            map.get($state, inner-circle-background)
        );
    }
}

@mixin kbq-radio-color($component, $type-name) {
    @include kbq-radio-state($component, $type-name, default);

    & .kbq-hint .kbq-hint__text {
        color: map.get($component, $type-name, default, caption);
    }

    &:hover {
        @include kbq-radio-state($component, $type-name, states-hover);
    }

    &.cdk-keyboard-focused {
        @include kbq-radio-state($component, $type-name, states-focused);
    }

    &.kbq-selected:not(.kbq-disabled) {
        @include kbq-radio-state($component, $type-name, states-checked);
    }

    &.kbq-selected.kbq-disabled {
        @include kbq-radio-state($component, $type-name, states-checked-disabled);
    }

    &.kbq-disabled {
        @include kbq-radio-state($component, $type-name, states-disabled);

        & .kbq-radio-label {
            cursor: default;
        }

        & .kbq-hint .kbq-hint__text {
            color: map.get($component, $type-name, states-disabled, caption);
        }
    }
}

@mixin kbq-radio-theme($theme) {
    $foreground: map.get($theme, foreground);

    $radio: map.get(map.get($theme, components), radio);

    .kbq-radio-button {
        & .kbq-radio-button__inner-circle {
            border-width: 0 !important;
        }

        @include kbq-radio-color($radio, theme);

        color: kbq-css-variable(foreground-contrast, map.get($foreground, contrast));

        &.kbq-error {
            @include kbq-radio-color($radio, error);

            color: kbq-css-variable(foreground-contrast, map.get($foreground, contrast));
        }
    }
}

@mixin kbq-radio-typography($config) {
    .kbq-radio-button {
        @include kbq-typography-css-variables(radio, normal-label);

        & .kbq-hint .kbq-hint__text {
            @include kbq-typography-css-variables(radio, normal-caption);
        }
    }

    .kbq-radio-button.kbq-radio-button_big {
        @include kbq-typography-css-variables(radio, big-label);

        & .kbq-hint .kbq-hint__text {
            @include kbq-typography-css-variables(radio, big-caption);
        }
    }
}
