@use 'sass:meta';
@use 'sass:map';

@use '../core/styles/common/visually-hidden';
@use '../core/styles/common/layout';

@use '../core/styles/tokens';
@use '../core/styles/common/tokens' as *;


$tokens: meta.module-variables(tokens) !default;


.kbq-checkbox-checkmark,
.kbq-checkbox-mixedmark {
    display: none;
}

.kbq-checkbox__frame {
    display: flex;
    align-items: center;
    justify-content: center;

    box-sizing: border-box;
    pointer-events: none;
    background-color: transparent;

    border-radius: kbq-css-variable(checkbox-size-normal-border-radius);

    border: {
        width: kbq-css-variable(checkbox-size-normal-border-width);
        style: solid;
    }

    height: kbq-css-variable(checkbox-size-normal-width);
    width: kbq-css-variable(checkbox-size-normal-width);
}

.kbq-checkbox__layout {
    position: relative;

    display: inline-flex;

    // `cursor: inherit` ensures that the wrapper element gets the same cursor as the kbq-checkbox
    // (e.g. pointer by default, regular when disabled), instead of the browser default.
    cursor: inherit;

    padding-left: calc(
        var(--kbq-checkbox-size-normal-width, map.get($tokens, checkbox-size-normal-width)) +
        var(
            --kbq-checkbox-size-normal-horizontal-content-padding,
            map.get($tokens, checkbox-size-normal-horizontal-content-padding)
        )
    );

    vertical-align: top;
}

.kbq-checkbox__inner-container {
    display: inline-block;

    position: absolute;
    top: 0;
    left: 0;

    height: kbq-css-variable(checkbox-size-normal-width);
    width: kbq-css-variable(checkbox-size-normal-width);
}

.kbq-checkbox {
    display: inline-block;

    cursor: pointer;
    -webkit-tap-highlight-color: transparent;

    &.kbq-checked {
        .kbq-checkbox-checkmark {
            display: block;
        }

        .kbq-checkbox-mixedmark {
            display: none;
        }
    }

    &.kbq-indeterminate {
        .kbq-checkbox-checkmark {
            display: none;
        }

        .kbq-checkbox-mixedmark {
            display: block;
        }
    }

    &.kbq-disabled {
        cursor: default;

        .kbq-checkbox__frame {
            box-shadow: none;
        }
    }

    & .kbq-hint {
        margin-top: kbq-css-variable(checkbox-size-normal-vertical-content-padding);
    }
}

.kbq-checkbox.kbq-checkbox_big {
    & .kbq-checkbox__layout {
        padding-left: calc(
            var(--kbq-checkbox-size-normal-width, map.get($tokens, checkbox-size-normal-width)) +
            var(
                --kbq-checkbox-size-normal-horizontal-content-padding,
                map.get($tokens, checkbox-size-normal-horizontal-content-padding)
            )
        );
    }

    & .kbq-checkbox__inner-container {
        top: 2px;
        height: kbq-css-variable(checkbox-size-big-width);
        width: kbq-css-variable(checkbox-size-big-width);
    }

    & .kbq-checkbox__frame {
        border-radius: kbq-css-variable(checkbox-size-big-border-radius);

        border: {
            width: kbq-css-variable(checkbox-size-big-border-width);
            style: solid;
        }
    }

    & .kbq-hint {
        margin-top: kbq-css-variable(checkbox-size-big-vertical-content-padding);
    }
}

.kbq-checkbox__text-container {
    display: flex;
    flex-direction: column;
}

.kbq-checkbox__inner-container_no-side-margin {
    margin: {
        left: 0;
        right: 0;
    }
}

/* stylelint-disable no-descending-specificity */
.kbq-checkbox_label-before {
    .kbq-checkbox__layout {
        padding-left: 0;
        padding-right: calc(
            var(--kbq-checkbox-size-normal-width, map.get($tokens, checkbox-size-normal-width)) +
            var(
                --kbq-checkbox-size-normal-horizontal-content-padding,
                map.get($tokens, checkbox-size-normal-horizontal-content-padding)
            )
        );
    }

    .kbq-checkbox__inner-container {
        right: 0;
        left: unset;
    }
}
