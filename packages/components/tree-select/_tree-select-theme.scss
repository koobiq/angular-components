@use 'sass:meta';
@use 'sass:map';

@use '../core/styles/theming/theming' as *;
@use '../core/styles/typography/typography-utils' as *;
@use '../core/styles/common/popup' as *;
@use '../core/styles/common/tokens' as *;


@mixin kbq-tree-select-theme($theme) {
    $foreground: map.get($theme, foreground);

    $select-panel: map.get($theme, components, select-panel);
    $divider: map.get($theme, components, divider);

    .kbq-tree-select {
        color: kbq-css-variable(foreground-contrast, map.get($foreground, contrast));

        &.ng-invalid {
            color: kbq-css-variable(error-default, map.get($theme, error, default));
        }

        &.kbq-disabled {
            color: kbq-css-variable(foreground-text-disabled, map.get($foreground, text-disabled));
        }
    }

    .kbq-select__placeholder {
        text-overflow: ellipsis;

        color: kbq-css-variable(foreground-text-disabled, map.get($foreground, text-disabled));
    }

    .kbq-tree-select__panel {
        box-shadow: kbq-css-variable(select-panel-shadow, map.get($select-panel, shadow));
        background: kbq-css-variable(select-panel-background, map.get($select-panel, background));

        & .kbq-tree-select__footer {
            border-color: kbq-css-variable(divider-color, map.get($divider, color));
        }
    }
}

@mixin kbq-tree-select-typography($config) {
    .kbq-tree-select,
    .kbq-tree-select__panel {
        @include kbq-typography-css-variables(select-panel, default);
    }
}
