@use 'sass:map';

@use '../core/styles/common/tokens' as *;


@mixin kbq-card-style($component, $style-name) {
    $style: map.get($component, $style-name);

    box-shadow:
        inset -1px 0 0 0 kbq-css-variable(card-#{$style-name}-shadow, map.get($style, shadow)),
        inset 0 1px 0 0 kbq-css-variable(card-#{$style-name}-shadow, map.get($style, shadow)),
        inset 0 -1px 0 0 kbq-css-variable(card-#{$style-name}-shadow, map.get($style, shadow));

    background-color: kbq-css-variable(card-#{$style-name}-background, map.get($style, background));

    border-left-color: kbq-css-variable(card-#{$style-name}-vertical-line, map.get($style, vertical-line));
}

@mixin kbq-card-theme($theme) {
    $foreground: map.get($theme, foreground);
    $background: map.get($theme, background);

    $card: map.get(map.get($theme, components), card);
    $popup: map.get(map.get($theme, components), popup);

    .kbq-card {
        color: kbq-css-variable(foreground-contrast, map.get($foreground, contrast));

        &.kbq-card_error {
            @include kbq-card-style($card, error);
        }

        &.kbq-card_warning {
            @include kbq-card-style($card, warning);
        }

        &.kbq-card_success {
            @include kbq-card-style($card, success);
        }

        &.kbq-card_info {
            @include kbq-card-style($card, info);
        }

        &.kbq-card_white {
            background-color: kbq-css-variable(popup-background, map.get($popup, background));
        }

        &.kbq-selected {
            background-color: kbq-css-variable(states-selected-color, map.get($theme, states, selected-color));
        }

        &:not(.kbq-card_readonly):hover {
            .kbq-card__overlay {
                background: kbq-css-variable(background-overlay-hover, map.get($background, overlay-hover));
            }
        }

        &.cdk-keyboard-focused {
            box-shadow: 0 0 0.1px 2px kbq-css-variable(states-focused-color, map.get($theme, states, focused-color));
        }
    }
}
