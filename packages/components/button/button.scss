@use 'sass:meta';
@use 'sass:map';

@use 'button-base' as *;

@use '../core/styles/tokens';
@use '../core/styles/common/tokens' as *;


$tokens: meta.module-variables(tokens) !default;

.kbq-button {
    @extend %kbq-button-base;

    // base padding + compensation (4px) - border-width (2px)
    padding-left: calc(
        var(--kbq-button-size-horizontal-padding, map.get($tokens, button-size-horizontal-padding)) + 4px
    );
    padding-right: calc(
        var(--kbq-button-size-horizontal-padding, map.get($tokens, button-size-horizontal-padding)) + 4px
    );

    &.kbq-button-icon_left {
        padding-left: kbq-css-variable(button-size-horizontal-padding);
    }

    &.kbq-button-icon_right {
        padding-right: kbq-css-variable(button-size-horizontal-padding);
    }
}

.kbq-light-button {
    @extend %kbq-button-base;
}

.kbq-button-icon {
    @extend %kbq-button-base;

    padding-left: kbq-css-variable(button-icon-size-horizontal-padding);

    padding-right: kbq-css-variable(button-icon-size-horizontal-padding);
}

.kbq-button-overlay {
    position: absolute;

    top: -#{map.get($tokens, button-size-border-width)};
    left: -#{map.get($tokens, button-size-border-width)};
    right: -#{map.get($tokens, button-size-border-width)};
    bottom: -#{map.get($tokens, button-size-border-width)};

    border-radius: inherit;
}
