@use 'sass:meta';
@use 'sass:map';

@use '../core/styles/typography/typography-utils' as *;


@mixin kbq-link-geometry($tokens) {
    display: inline;

    text-decoration: none;
    cursor: pointer;

    outline-offset: var(
        --kbq-link-size-state-focused-outline-offset, map.get($tokens, link-size-state-focused-outline-offset)
    );

    &:focus {
        outline: none;
    }

    &.kbq-text-only,
    &.kbq-text-with-icon .kbq-link__text {
        border-bottom-style: solid;
        border-bottom-width: 1px;
    }

    &.kbq-text-with-icon .kbq-link__text {
        &:not(:first-child) {
            margin-left: var(
                --kbq-link-size-normal-content-padding, map.get($tokens, link-size-normal-content-padding)
            );
        }

        &:not(:last-child) {
            margin-right: var(
                --kbq-link-size-normal-content-padding, map.get($tokens, link-size-normal-content-padding)
            );
        }
    }

    &.kbq-link_compact {
        &.kbq-text-with-icon .kbq-link__text {
            &:not(:first-child) {
                margin-left: var(
                    --kbq-link-size-compact-content-padding, map.get($tokens, link-size-compact-content-padding)
                );
            }

            &:not(:last-child) {
                margin-right: var(
                    --kbq-link-size-compact-content-padding, map.get($tokens, link-size-compact-content-padding)
                );
            }
        }
    }

    /* stylelint-disable no-descending-specificity */
    &.kbq-link_big {
        &.kbq-text-with-icon .kbq-link__text {
            &:not(:first-child) {
                margin-left: var(--kbq-link-size-big-content-padding, map.get($tokens, link-size-big-content-padding));
            }

            &:not(:last-child) {
                margin-right: var(--kbq-link-size-big-content-padding, map.get($tokens, link-size-big-content-padding));
            }
        }
    }


    &.kbq-link_pseudo {
        &.kbq-text-only,
        &.kbq-text-with-icon .kbq-link__text {
            border-bottom: none;
        }
    }

    &.kbq-link_no-underline {
        &.kbq-text-only,
        &.kbq-text-with-icon .kbq-link__text {
            border-bottom-color: transparent;
        }
    }
    /* stylelint-enable no-descending-specificity */
}

@mixin kbq-link-state($state) {
    color: map.get($state, text);

    &.kbq-text-only,
    &.kbq-text-with-icon .kbq-link__text {
        border-bottom-color: map.get($state, border-bottom);
    }

    & .kbq-icon {
        color: map.get($state, text) !important;
    }
}

@mixin kbq-link-theme($theme) {
    $link: map.get(map.get($theme, components), link);

    $tokens: map.get($theme, tokens);

    .kbq-link {
        @include kbq-link-geometry($tokens);

        $default: map.get($link, default);
        @include kbq-link-state($default);

        transition: color ease-out 300ms;

        &:hover {
            transition: color 0ms;

            $hover: map.get($link, hover);
            @include kbq-link-state($hover);
        }

        &:active,
        &.kbq-active {
            $active: map.get($link, active);
            @include kbq-link-state($active);
        }

        &.kbq-link_use-visited:not(.kbq-disabled):visited {
            $visited: map.get($link, visited);
            @include kbq-link-state($visited);

            &:hover {
                $visited-hover: map.get($link, visited-hover);
                @include kbq-link-state($visited-hover);
            }

            &:active,
            &.kbq-active {
                $visited-active: map.get($link, visited-active);
                @include kbq-link-state($visited-active);
            }
        }

        &.cdk-keyboard-focused {
            $focused: map.get($link, focused);
            outline: map.get($focused, outline) solid;
        }

        &.kbq-disabled {
            cursor: default;
            pointer-events: none;

            $disabled: map.get($link, disabled);
            @include kbq-link-state($disabled);
        }

        @media print {
            .kbq-link_print:not(.kbq-disabled) {
                &.kbq-text-only,
                &.kbq-text-with-icon .kbq-link__text {
                    border-bottom: none;
                }

                &::after {
                    content: ":\a" attr(print);
                    white-space: pre;
                }
            }
        }
    }
}

@mixin kbq-link-typography($config) {
    $tokens: map.get($config, tokens);

    .kbq-link {
        @include kbq-typography-level-to-styles($config, map.get($tokens, link-font-normal));

        & .kbq-icon {
            line-height: inherit;
            vertical-align: text-bottom;
        }
    }

    .kbq-link.kbq-link_compact {
        @include kbq-typography-level-to-styles($config, map.get($tokens, link-font-compact));
    }

    .kbq-link.kbq-link_big {
        @include kbq-typography-level-to-styles($config, map.get($tokens, link-font-big));
    }
}
