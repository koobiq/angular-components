@use 'sass:meta';
@use 'sass:map';

@use '../core/styles/typography/typography-utils' as *;
@use '../core/styles/common/tokens' as *;

@mixin kbq-modal-theme($theme) {
    $modal: map.get(map.get($theme, components), modal);

    .kbq-modal {
        background: kbq-css-variable(modal-container-background, map.get($modal, container-background));
        box-shadow: kbq-css-variable(modal-container-box-shadow, map.get($modal, container-box-shadow));

        .kbq-modal-header {
            & .kbq-modal-title {
                color: kbq-css-variable(modal-header-text-color, map.get($modal, header));
            }

            & .kbq-modal-close {
                color: kbq-css-variable(modal-close-button-color, map.get($modal, close-button));
            }
        }

        .kbq-modal-content {
            color: kbq-css-variable(modal-content-text-color, map.get($modal, content));
        }

        // FIXME: default token doesn't exist
        .kbq-modal-header.kbq-modal-body_top-overflow {
            box-shadow: kbq-css-variable(modal-body-top-shadow, map.get($modal, body-top-shadow));
        }
        // FIXME: default token doesn't exist
        .kbq-modal-footer.kbq-modal-body_bottom-overflow {
            box-shadow: kbq-css-variable(modal-body-bottom-shadow, map.get($modal, body-bottom-shadow));
        }
    }

    .kbq-modal-mask {
        background-color: kbq-css-variable(modal-overlay-background, map.get($modal, overlay));
    }
}

@mixin kbq-modal-typography($config) {
    .kbq-modal-title {
        @include kbq-typography-css-variables(modal, header);
    }

    .kbq-modal-body {
        @include kbq-typography-css-variables(modal, content);
    }
}
