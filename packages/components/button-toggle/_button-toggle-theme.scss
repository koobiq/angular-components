@use 'sass:meta';
@use 'sass:map';

@use '../core/styles/typography/typography-utils' as *;

@use '../core/styles/common/tokens' as *;


@mixin kbq-button-toggle-state($component, $state-name) {
    $state: map.get($component, $state-name);

    background: kbq-css-variable(button-toggle-item-#{$state-name}-background, map.get($state, background));

    color: kbq-css-variable(button-toggle-item-#{$state-name}-text, map.get($state, text));

    & .kbq-icon {
        color: kbq-css-variable(button-toggle-item-#{$state-name}-icon, map.get($state, icon));
    }
}

@mixin kbq-button-toggle-theme($theme) {
    $button-toggle: map.get(map.get($theme, components), button-toggle);

    .kbq-button-toggle-group {
        background: kbq-css-variable(
            button-toggle-container-background, map.get($button-toggle, container, background)
        );

        .kbq-button-toggle {
            $button: map.get($button-toggle, item);

            & > .kbq-button,
            & > .kbq-icon-button {
                @include kbq-button-toggle-state($button, default);

                &:hover:not(.kbq-disabled) {
                    @include kbq-button-toggle-state($button, states-hover);
                }

                &:active:not(.kbq-disabled) {
                    @include kbq-button-toggle-state($button, states-active);
                }

                &.kbq-selected:not(.kbq-disabled) {
                    @include kbq-button-toggle-state($button, states-selected);

                    &:hover {
                        @include kbq-button-toggle-state($button, states-selected-hover);
                    }

                    &:active {
                        @include kbq-button-toggle-state($button, states-selected-active);
                    }
                }

                &.kbq-disabled {
                    @include kbq-button-toggle-state($button, states-disabled);
                }

                &.kbq-disabled.kbq-selected {
                    @include kbq-button-toggle-state($button, states-selected-disabled);
                }

                &.cdk-keyboard-focused {
                    border-color: map.get($button, focused);
                }
            }
        }
    }
}

@mixin kbq-button-toggle-typography($config) {
    .kbq-button-toggle .kbq-button-toggle-wrapper {
        @include kbq-typography-css-variables(button-toggle, item);
    }
}

