@use '../core/styles/theming/theming' as *;
@use '../core/styles/typography/typography-utils' as *;
@use '../core/styles/common/tokens' as *;

@mixin kbq-tree-option($state-name) {
    background: var(--kbq-tree-#{$state-name}-container-background);

    .kbq-option-text {
        color: var(--kbq-tree-#{$state-name}-text-color);
    }

    .kbq-tree-node-toggle .kbq-icon {
        color: var(--kbq-tree-#{$state-name}-tree-toggle-color);
    }

    .kbq-option-action .kbq-icon {
        color: var(--kbq-tree-#{$state-name}-action-button-color);
    }

    .kbq-option-caption {
        color: var(--kbq-tree-#{$state-name}-caption-color);
    }
}

@mixin kbq-tree-theme() {
    .kbq-tree-selection:focus {
        outline: none;
    }

    .kbq-tree-option {
        @include kbq-tree-option(default);

        &:hover:not(.kbq-disabled) {
            @include kbq-tree-option(states-hover);
        }

        &.kbq-focused,
        &.kbq-active {
            border-color: var(--kbq-tree-states-focused-focus-outline-color);
        }

        &.kbq-selected {
            @include kbq-tree-option(states-selected);

            &:hover:not(.kbq-disabled) {
                @include kbq-tree-option(states-selected-hover);
            }
        }

        &.kbq-disabled {
            @include kbq-tree-option(states-disabled);

            & .kbq-icon {
                color: var(--kbq-states-icon-disabled);
            }
        }
    }
}

@mixin kbq-tree-typography() {
    .kbq-tree-option {
        @include kbq-typography-level-to-styles_css-variables(typography, text-normal);
    }

    .kbq-tree-option-caption {
        @include kbq-typography-level-to-styles_css-variables(typography, text-compact);
    }
}
